set term postscript eps color size 1, 7 font "RomanSerif.ttf" 14
seriesFolder=ARG1
planner=ARG2
inFile=seriesFolder."data/resultsTable_".planner.".csv"

set datafile separator ' '
set bmargin at screen 0.32

set style fill solid 0.5 border -1
set border 9
set style boxplot nooutliers
set style data boxplot
set grid y2tics
unset ytics

firstrow = system('head -1 '.inFile)

unset key
unset xtics
set xtics () scale 1.0 font ",35" rotate by 90 out offset -0.5, -18.0
set xtics nomirror

nb_metrics=words(firstrow)

do for [i=2:(nb_metrics)] {
  metricName = word(firstrow, i)
  outFileBox=seriesFolder."/plot/results_".planner."_".metricName.".eps"
  set output outFileBox
  if (metricName eq "solverTime"){
    set xtics add ("Solver Time [ms]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-2.5
  }
  if (metricName eq "integratedError") {
    set xtics add ("Summed Error" i);
  }
  if (metricName eq "pathLength") {
    set xtics add ("Path Length [m]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-1.0
  }
  if (metricName eq "clearance") {
    set xtics add ("Clearance [m]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-2.5
  }
  if (metricName eq "invClearance") {
    set xtics add ("Clearance^{-1} [1/m]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-2.5
  }
  if (metricName eq "invDynamicClearance") {
    set xtics add ("Clearance^{-1} [1/m]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-2.5
  }
  if (metricName eq "selfClearance") {
    set xtics add ("Self Clearence [m]" i);
  }
  if (metricName eq "time2Goal") {
    set xtics add ("Time to Goal [s]" i);
    set y2tics nomirror font ',35' rotate by 90 out offset 0.5,-2.0
  }
  colorName = 'gray'
  plot inFile using (i):i lw 2 lc rgb colorName  axes x1y2
}
